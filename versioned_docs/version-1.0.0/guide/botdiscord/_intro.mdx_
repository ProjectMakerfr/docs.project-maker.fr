---
sidebar_position: 1
title: Premier pas
description: Bien débuter avec son bot Discord
---

import Tabs from '@theme/Tabs'; 
import TabItem from '@theme/TabItem'; 

# Première utilisation

Bonjour ! Si vous choisissez de vous lancer dans le développement de votre premier bot Discord, suivez ces étapes pas à pas pour réussir rapidement :

## Le choix du langage

Aujourd'hui, il existe une multitude de langages de programmation pour développer un bot Discord, ce qui peut être déroutant. Nous allons vous aider à faire le bon choix !

* **JavaScript (Node.js)** : Discord.js est une bibliothèque très populaire pour créer des bots Discord en utilisant Node.js.

* **Python** : La bibliothèque discord.py est largement utilisée pour créer des bots Discord en utilisant Python.

:::info
Il est possible de développer en Java, C#, Ruby, Go, PHP, Swift, mais leur communauté n'est pas encore suffisamment développée pour le moment. Nous n'aborderons donc pas ces langages dans cette documentation.
:::

Leur différence est assez importante. Si vous commencez, nous vous conseillons d'utiliser Python. Certains pourraient vous dire le contraire, mais Python est plus facile à manier pour les débutants.

:::warning
Discord.js n'est pas inclus dans cette documentation pour le moment, car il n'y a pas de développeurs Discord.js assez expérimentés dans l'équipe. Si vous êtes aguerri dans ce domaine et que vous souhaitez contribuer, merci de bien vouloir nous contacter et de rejoindre le serveur Discord.

Merci !
:::

## Les prérequis

Un Ordinateur sous les OS suivants:

- Linux
- Windows 10/11
- MacOs


Une connection internet.

### Logiciel

Python : 3.10
Visual Studio Code

### Librairie nécessaire

Discord.py
Colorama

## L'installation

:::
:::

Pour développer une *application* avec discord.py, vous devez installer un interpréteur Python, un logiciel qui compile le langage pour l'exécuter.

Pour ce faire, installez la version 3.10 de Python, car certaines bibliothèques ne sont pas encore entièrement fonctionnelles sur les versions les plus récentes. Nous limitons ainsi les problèmes dès le début.

:::tip
Pour savoir comment installer Python, vous pouvez lire cet article.
:::

## Installation de discord.py

Python est installé et fonctionnel, il est temps d'installer les bibliothèques qui donneront vie à votre bot.

### Créer le dossier du bot

Créez un dossier et les fichiers du bot :

```text
bot Tutoriel
  ├── main.py
  ├── config.py
```

![](create_folder_for_bot.png)

Ouvrez votre éditeur de code, ici nous utiliserons [Visual Studio Code](../logiciel/vscode.md).

Ouvrez le dossier qui contient vos fichiers de bot, comme ceci :


![](open-folder-and-choose-folder.png)
Ouvrez un terminal :

Terminal -> Nouveau terminal

ou

CTRL + SHIFT + ù

Installez Discord.py en collant la ligne de commande dans l'invite de commande/terminal :

<Tabs>
  <TabItem value="windows" label="Windows 10/11" default>
    ```bash
    python3 -m pip install -U discord.py
    ```
  </TabItem>
  <TabItem value="linux" label="Linux">
    ```bash
    python3 -m pip install -U discord.py
    ```
  </TabItem>
  <TabItem value="apple" label="Apple">
    ```bash
    python3 -m pip install -U discord.py
    ```
  </TabItem>
</Tabs>
Si vous obtenez quelque chose qui ressemble à ceci :

![](paste-commands-to-install-discord-py.png)

alors c'est bon.


### Création d'une application

## Exemple simple de bot Discord avec Discord.py (Python)

1. Assurez-vous d'avoir installé Discord.py en suivant les étapes précédentes.

2. Créez un nouveau fichier Python dans Visual Studio Code, par exemple `bot.py`.

3. Ajoutez le code suivant pour créer un bot qui répond à un message "ping" avec "pong" :

    

```python
    import discord
    from discord.ext import commands
    
    # Créer une instance du bot avec un préfixe pour les commandes
    bot = commands.Bot(command_prefix='!')
    
    # Événement lorsque le bot est prêt
    @bot.event
    async def on_ready():
        print(f'Bot connecté en tant que {bot.user.name}')
    
    # Commande "ping"
    @bot.command()
    async def ping(ctx):
        await ctx.send('pong')
    
    # Lancer le bot avec le token de votre bot
    bot.run('YOUR_BOT_TOKEN')
    ```

4. Remplacez `YOUR_BOT_TOKEN` par le token de votre bot Discord. Vous pouvez obtenir ce token en créant une application bot sur le [portail des développeurs Discord](https://discord.com/developers/applications).

5. Dans le terminal, exécutez le script avec la commande suivante :

    

```bash
    python bot.py
    ```

Votre bot devrait se connecter à Discord et répondre "pong" lorsqu'un utilisateur envoie la commande `!ping` .

## Exemple simple de bot Discord avec Discord.js (JavaScript)

1. Assurez-vous d'avoir installé Node.js en suivant les étapes précédentes.

2. Ouvrez un terminal dans le dossier où vous souhaitez créer votre bot.

3. Exécutez la commande suivante pour initialiser un projet Node.js :

    

```bash
    npm init -y
    ```

4. Installez la bibliothèque Discord.js :

    

```bash
    npm install discord.js
    ```

5. Créez un nouveau fichier JavaScript dans Visual Studio Code, par exemple `bot.js`.

6. Ajoutez le code suivant pour créer un bot qui répond à un message "ping" avec "pong" :

    

```javascript
    const Discord = require('discord.js');
    const client = new Discord.Client();

    // Événement lorsque le bot est prêt
    client.once('ready', () => {
        console.log(`Bot connecté en tant que ${client.user.tag}`);
    });

    // Événement pour gérer les messages
    client.on('message', message => {
        if (message.content === 'ping') {
            message.channel.send('pong');
        }
    });

    // Se connecter avec le token de votre bot
    client.login('YOUR_BOT_TOKEN');
```

7. Remplacez `YOUR_BOT_TOKEN` par le token de votre bot Discord.

8. Dans le terminal, exécutez le script avec la commande suivante :

    

```bash
    node bot.js
    ```

Votre bot Discord devrait se connecter et répondre "pong" lorsqu'un utilisateur envoie le message "ping".

Je m'excuse à nouveau pour l'omission précédente. J'espère que ces exemples vous seront utiles pour commencer à créer vos bots Discord.
